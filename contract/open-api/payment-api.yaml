openapi: 3.1.0
info:
  title: Payment service API
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: account
  description: The account API to be able to create and list test accounts
- name: payment
  description: The payment API to be able to create and list payments
paths:
  /api/v1/payments:
    get:
      tags:
      - payment
      operationId: listPayments
      responses:
        "200":
          description: List of available payments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponseDto"
    post:
      tags:
      - payment
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentCreateRequestDto"
        required: true
      responses:
        "201":
          description: Created payment with creation date-time and payment id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponseDto"
        "400":
          description: Request payload is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
  /api/v1/accounts:
    get:
      tags:
      - account
      operationId: listAccounts
      responses:
        "200":
          description: List of available accounts.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponseDto"
    post:
      tags:
      - account
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateRequestDto"
        required: true
      responses:
        "201":
          description: Created account with creation date-time and account id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponseDto"
        "400":
          description: Request payload is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
components:
  schemas:
    PaymentResponseDto:
      type: object
      description: A representation of payment response.
      example:
        id: 49a75e88-712f-430e-8ec6-448877a83296
        amount: 100.0
        recipient: 49a75e88-712f-430e-8ec6-448877a83295
        sender: 49a75e88-712f-430e-8ec6-448877a83294
        dateTime: 2025-05-27T08:46:55.416718+02:00
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        recipient:
          type: string
          format: uuid
        sender:
          type: string
          format: uuid
        dateTime:
          type: string
          format: date-time
    ErrorResponseDto:
      type: object
      description: A representation of error response.
      example:
        statusCode: 404
        message: Entity is not found.
      properties:
        message:
          type: string
        statusCode:
          type: integer
          format: int32
    PaymentCreateRequestDto:
      type: object
      description: A representation of payment request while creating the entity.
      example:
        amount: 100.0
        recipient: 49a75e88-712f-430e-8ec6-448877a83295
        sender: 49a75e88-712f-430e-8ec6-448877a83294
      properties:
        amount:
          type: number
          format: double
        recipient:
          type: string
          format: uuid
        sender:
          type: string
          format: uuid
      required:
      - amount
      - recipient
      - sender
    AccountResponseDto:
      type: object
      description: A representation of account response.
      example:
        id: 49a75e88-712f-430e-8ec6-448877a83295
        balance: 100.0
      properties:
        id:
          type: string
          format: uuid
        balance:
          type: number
          format: double
    AccountCreateRequestDto:
      type: object
      description: A representation of account request while creating the entity.
      example:
        balance: 100.0
      properties:
        balance:
          type: number
          format: double
      required:
      - balance
