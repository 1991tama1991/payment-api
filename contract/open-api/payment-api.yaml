openapi: 3.1.0
info:
  title: Payment service API
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: account
  description: The account API to be able to create and list test accounts
- name: payment
  description: The payment API to be able to create and list payments
paths:
  /api/v1/payments:
    get:
      tags:
      - payment
      operationId: listPayments
      responses:
        "200":
          description: List of available payments.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponseDto"
    post:
      tags:
      - payment
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentCreateRequestDto"
        required: true
      responses:
        "201":
          description: Created payment with creation date-time and payment id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponseDto"
        "400":
          description: Request payload is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/accounts:
    get:
      tags:
      - account
      operationId: listAccounts
      responses:
        "200":
          description: List of available accounts.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponseDto"
    post:
      tags:
      - account
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateRequestDto"
        required: true
      responses:
        "201":
          description: Created account with creation date-time and account id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountResponseDto"
        "400":
          description: Request payload is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    PaymentResponseDto:
      type: object
      description: A representation of payment response.
      example:
        id: 49a75e88-712f-430e-8ec6-448877a83296
        amount: 100.0
        recipient: 49a75e88-712f-430e-8ec6-448877a83295
        sender: 49a75e88-712f-430e-8ec6-448877a83294
        dateTime: 2025-05-27T08:46:55.416718+02:00
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        recipient:
          type: string
          format: uuid
        sender:
          type: string
          format: uuid
        dateTime:
          type: string
          format: date-time
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: string
        size:
          type: integer
          format: int64
          deprecated: true
        creationDate:
          type: string
          format: date-time
          deprecated: true
        modificationDate:
          type: string
          format: date-time
          deprecated: true
        readDate:
          type: string
          format: date-time
          deprecated: true
        formData:
          type: boolean
        inline:
          type: boolean
        attachment:
          type: boolean
    DefaultHttpStatusCode:
      allOf:
      - $ref: "#/components/schemas/HttpStatusCode"
    ErrorResponse:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          properties:
            origin:
              type: string
            contentType:
              $ref: "#/components/schemas/MediaType"
            connection:
              type: array
              items:
                type: string
            ifModifiedSince:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            empty:
              type: boolean
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    hostAddress:
                      type: string
                    address:
                      type: string
                      format: byte
                    hostName:
                      type: string
                    linkLocalAddress:
                      type: boolean
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    canonicalHostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            range:
              type: array
              items:
                $ref: "#/components/schemas/HttpRange"
            allow:
              type: array
              items:
                $ref: "#/components/schemas/HttpMethod"
              uniqueItems: true
            contentDisposition:
              $ref: "#/components/schemas/ContentDisposition"
            acceptCharset:
              type: array
              items:
                type: string
            cacheControl:
              type: string
            contentLanguage:
              type: string
            etag:
              type: string
            accept:
              type: array
              items:
                $ref: "#/components/schemas/MediaType"
            vary:
              type: array
              items:
                type: string
            expires:
              type: integer
              format: int64
            pragma:
              type: string
            ifMatch:
              type: array
              items:
                type: string
            upgrade:
              type: string
            bearerAuth:
              type: string
              writeOnly: true
            ifNoneMatch:
              type: array
              items:
                type: string
            acceptPatch:
              type: array
              items:
                $ref: "#/components/schemas/MediaType"
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            basicAuth:
              type: string
              writeOnly: true
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowMethods:
              type: array
              items:
                $ref: "#/components/schemas/HttpMethod"
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              $ref: "#/components/schemas/HttpMethod"
            accessControlMaxAge:
              type: integer
              format: int64
            acceptLanguageAsLocales:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
        body:
          $ref: "#/components/schemas/ProblemDetail"
        statusCode:
          oneOf:
          - $ref: "#/components/schemas/DefaultHttpStatusCode"
          - $ref: "#/components/schemas/HttpStatus"
        detailMessageArguments:
          type: array
          items: {}
        detailMessageCode:
          type: string
        titleMessageCode:
          type: string
        typeMessageCode:
          type: string
    HttpMethod: {}
    HttpRange: {}
    HttpStatus:
      allOf:
      - $ref: "#/components/schemas/HttpStatusCode"
      enum:
      - 100 CONTINUE
      - 101 SWITCHING_PROTOCOLS
      - 102 PROCESSING
      - 103 EARLY_HINTS
      - 103 CHECKPOINT
      - 200 OK
      - 201 CREATED
      - 202 ACCEPTED
      - 203 NON_AUTHORITATIVE_INFORMATION
      - 204 NO_CONTENT
      - 205 RESET_CONTENT
      - 206 PARTIAL_CONTENT
      - 207 MULTI_STATUS
      - 208 ALREADY_REPORTED
      - 226 IM_USED
      - 300 MULTIPLE_CHOICES
      - 301 MOVED_PERMANENTLY
      - 302 FOUND
      - 302 MOVED_TEMPORARILY
      - 303 SEE_OTHER
      - 304 NOT_MODIFIED
      - 305 USE_PROXY
      - 307 TEMPORARY_REDIRECT
      - 308 PERMANENT_REDIRECT
      - 400 BAD_REQUEST
      - 401 UNAUTHORIZED
      - 402 PAYMENT_REQUIRED
      - 403 FORBIDDEN
      - 404 NOT_FOUND
      - 405 METHOD_NOT_ALLOWED
      - 406 NOT_ACCEPTABLE
      - 407 PROXY_AUTHENTICATION_REQUIRED
      - 408 REQUEST_TIMEOUT
      - 409 CONFLICT
      - 410 GONE
      - 411 LENGTH_REQUIRED
      - 412 PRECONDITION_FAILED
      - 413 PAYLOAD_TOO_LARGE
      - 413 REQUEST_ENTITY_TOO_LARGE
      - 414 URI_TOO_LONG
      - 414 REQUEST_URI_TOO_LONG
      - 415 UNSUPPORTED_MEDIA_TYPE
      - 416 REQUESTED_RANGE_NOT_SATISFIABLE
      - 417 EXPECTATION_FAILED
      - 418 I_AM_A_TEAPOT
      - 419 INSUFFICIENT_SPACE_ON_RESOURCE
      - 420 METHOD_FAILURE
      - 421 DESTINATION_LOCKED
      - 422 UNPROCESSABLE_ENTITY
      - 423 LOCKED
      - 424 FAILED_DEPENDENCY
      - 425 TOO_EARLY
      - 426 UPGRADE_REQUIRED
      - 428 PRECONDITION_REQUIRED
      - 429 TOO_MANY_REQUESTS
      - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
      - 451 UNAVAILABLE_FOR_LEGAL_REASONS
      - 500 INTERNAL_SERVER_ERROR
      - 501 NOT_IMPLEMENTED
      - 502 BAD_GATEWAY
      - 503 SERVICE_UNAVAILABLE
      - 504 GATEWAY_TIMEOUT
      - 505 HTTP_VERSION_NOT_SUPPORTED
      - 506 VARIANT_ALSO_NEGOTIATES
      - 507 INSUFFICIENT_STORAGE
      - 508 LOOP_DETECTED
      - 509 BANDWIDTH_LIMIT_EXCEEDED
      - 510 NOT_EXTENDED
      - 511 NETWORK_AUTHENTICATION_REQUIRED
    HttpStatusCode:
      type: object
      properties:
        error:
          type: boolean
        is1xxInformational:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is3xxRedirection:
          type: boolean
        is5xxServerError:
          type: boolean
        is4xxClientError:
          type: boolean
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        qualityValue:
          type: number
          format: double
        charset:
          type: string
        concrete:
          type: boolean
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
        subtypeSuffix:
          type: string
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties: {}
    PaymentCreateRequestDto:
      type: object
      description: A representation of payment request while creating the entity.
      example:
        amount: 100.0
        recipient: 49a75e88-712f-430e-8ec6-448877a83295
        sender: 49a75e88-712f-430e-8ec6-448877a83294
      properties:
        amount:
          type: number
          format: double
        recipient:
          type: string
          format: uuid
        sender:
          type: string
          format: uuid
      required:
      - amount
      - recipient
      - sender
    AccountResponseDto:
      type: object
      description: A representation of account response.
      example:
        id: 49a75e88-712f-430e-8ec6-448877a83295
        balance: 100.0
      properties:
        id:
          type: string
          format: uuid
        balance:
          type: number
          format: double
    AccountCreateRequestDto:
      type: object
      description: A representation of account request while creating the entity.
      example:
        balance: 100.0
      properties:
        balance:
          type: number
          format: double
      required:
      - balance
